name: Documentation CI

on:
  pull_request:
    paths:
      - 'docs/**'
      - '.github/workflows/docs-ci.yml'
  push:
    tags:
      - 'v*'
    branches:
      - 'release/*'
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-deploy:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build documentation container
        run: |
          cd docs
          docker build -t van-cooldown-docs:latest .
      
      - name: Run documentation quality checks
        run: |
          cd docs
          docker run --rm -v "$(pwd)/src:/app/src:ro" \
            -v "$(pwd)/.markdownlint.json:/app/.markdownlint.json:ro" \
            -v "$(pwd)/.pyspelling.yml:/app/.pyspelling.yml:ro" \
            -v "$(pwd)/.aspell.en.pws:/app/.aspell.en.pws:ro" \
            van-cooldown-docs:latest sh -c "
              echo 'Running documentation quality checks...'
              echo '=== Markdown Linting ==='
              markdownlint src/**/*.md || echo 'Markdown linting completed with warnings'
              echo '=== Spell Checking ==='
              uv run pyspelling || echo 'Spell checking completed with issues'
              echo '=== Prose Quality Check ==='
              uv run proselint src/ || echo 'Prose quality check completed with suggestions'
              echo 'Quality checks completed!'
            "
      
      - name: Build documentation
        run: |
          cd docs
          docker run --rm \
            -v "$(pwd)/src:/app/src:ro" \
            -v "$(pwd)/mkdocs.yml:/app/mkdocs.yml:ro" \
            -v "$(pwd)/site:/app/site" \
            van-cooldown-docs:latest uv run mkdocs build --strict
      
      - name: Test documentation links
        run: |
          cd docs
          docker run --rm \
            -v "$(pwd)/site:/app/site:ro" \
            van-cooldown-docs:latest uv run linkchecker --check-extern site/
      
      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation-site
          path: docs/site/
      
      - name: Deploy to GitHub Pages
        if: github.event_name == 'release' || (github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/release/')))
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/site/
          enable_jekyll: false
          cname: van-cooldown-docs.example.com  # Optional: custom domain

  accessibility-check:
    name: Accessibility Check
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.event_name == 'release' || (github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/release/'))) || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: documentation-site
          path: docs/site/
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build documentation container
        run: |
          cd docs
          docker build -t van-cooldown-docs:latest .
      
      - name: Run accessibility tests
        run: |
          cd docs
          # Start documentation server in background
          docker run -d --name docs-server \
            -p 8000:8000 \
            -v "$(pwd)/site:/app/site:ro" \
            van-cooldown-docs:latest sh -c "cd site && python -m http.server 8000"
          
          # Wait for server to start
          sleep 5
          
          # Run accessibility tests
          docker run --rm --network host \
            van-cooldown-docs:latest axe http://localhost:8000 --exit
          
          # Clean up
          docker stop docs-server
          docker rm docs-server